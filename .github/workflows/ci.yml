name: ci

on: [push, pull_request]

jobs:

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.8]
        aiida-version: ['stable', 'develop']
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_django
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
        - 5672:5672
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install aiida develop version
      run: |
        pip install git+git://github.com/aiidateam/aiida-core
      if: ${{ matrix.aiida-version == 'develop' }}

    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[testing,oximachine]
        reentry scan -r aiida

    - name: Run test suite
      env:
        PYTEST_ADDOPTS: "--cov-report xml --cov-append"
      run: py.test
      continue-on-error: ${{ matrix.aiida-version == 'develop' }}  # allow failures against develop

    - name: Upload coverage report
      if: github.repository == 'lsmo-epfl/aiida-lsmo'
      uses: codecov/codecov-action@v1
      with:
        name: aiida-lsmo
        file: ./coverage.xml
        fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[docs,oximachine]
        reentry scan -r aiida
    - name: Build docs
      run: cd docs && make

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[pre-commit,docs,testing]
        reentry scan -r aiida
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
